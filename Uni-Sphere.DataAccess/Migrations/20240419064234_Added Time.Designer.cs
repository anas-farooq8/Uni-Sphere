// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Uni_Sphere.DataAccess.Data;

#nullable disable

namespace Uni_Sphere.DataAccess.Migrations
{
    [DbContext(typeof(UniSphereDbContext))]
    [Migration("20240419064234_Added Time")]
    partial class AddedTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassroomsStudents", b =>
                {
                    b.Property<int>("ClassroomsId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("ClassroomsId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("ClassroomsStudents");
                });

            modelBuilder.Entity("CoursesDepartments", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "DepartmentsId");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("CoursesDepartments");
                });

            modelBuilder.Entity("CoursesStudents", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CoursesStudents");
                });

            modelBuilder.Entity("DepartmentsSections", b =>
                {
                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<int>("SectionsId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentsId", "SectionsId");

                    b.HasIndex("SectionsId");

                    b.ToTable("DepartmentsSections");

                    b.HasData(
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 1
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 2
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 3
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 4
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 5
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 6
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 7
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 8
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 9
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 10
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 11
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 12
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 13
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 14
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 15
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 16
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 17
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 18
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 19
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 20
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 21
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 22
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 23
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 24
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 25
                        },
                        new
                        {
                            DepartmentsId = 1,
                            SectionsId = 26
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 1
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 2
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 3
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 4
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 5
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 6
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 7
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 8
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 9
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 10
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 11
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 12
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 13
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 14
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 15
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 16
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 17
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 18
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 19
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 20
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 21
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 22
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 23
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 24
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 25
                        },
                        new
                        {
                            DepartmentsId = 2,
                            SectionsId = 26
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 1
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 2
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 3
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 4
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 5
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 6
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 7
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 8
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 9
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 10
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 11
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 12
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 13
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 14
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 15
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 16
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 17
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 18
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 19
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 20
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 21
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 22
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 23
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 24
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 25
                        },
                        new
                        {
                            DepartmentsId = 3,
                            SectionsId = 26
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 1
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 2
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 3
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 4
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 5
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 6
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 7
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 8
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 9
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 10
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 11
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 12
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 13
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 14
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 15
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 16
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 17
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 18
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 19
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 20
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 21
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 22
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 23
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 24
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 25
                        },
                        new
                        {
                            DepartmentsId = 4,
                            SectionsId = 26
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 1
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 2
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 3
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 4
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 5
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 6
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 7
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 8
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 9
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 10
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 11
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 12
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 13
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 14
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 15
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 16
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 17
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 18
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 19
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 20
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 21
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 22
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 23
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 24
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 25
                        },
                        new
                        {
                            DepartmentsId = 5,
                            SectionsId = 26
                        });
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Classrooms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Batch")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CourseType")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsLab")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "CS-200I",
                            Description = "Computer Science is the study of computers and computational systems. Unlike electrical and computer engineers, computer scientists deal mostly with software and software systems; this includes their theory, design, development, and application.",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            Code = "SE-200K",
                            Description = "Software engineering is the systematic application of engineering approaches to the development of software. Software engineering is a direct sub-field of engineering and has an overlap with computer science and management science.",
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = 3,
                            Code = "DS-200D",
                            Description = "Data science is an inter-disciplinary field that uses scientific methods, processes, algorithms and systems to extract knowledge and insights from structured and unstructured data.",
                            Name = "Data Science"
                        },
                        new
                        {
                            Id = 4,
                            Code = "AI-200P",
                            Description = "Artificial intelligence (AI) refers to the simulation of human intelligence in machines that are programmed to think like humans and mimic their actions. The term may also be applied to any machine that exhibits traits associated with a human mind such as learning and problem-solving.",
                            Name = "Artificial Intelligence"
                        },
                        new
                        {
                            Id = 5,
                            Code = "CS-200Q",
                            Description = "Cybersecurity is the practice of protecting systems, networks, and programs from digital attacks. These attacks are usually aimed at accessing, changing, or destroying sensitive information; extorting money from users; or interrupting normal business processes.",
                            Name = "Cyber Security"
                        });
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.DiscussionPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassroomsId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomsId");

                    b.ToTable("DiscussionPosts");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Sections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "E"
                        },
                        new
                        {
                            Id = 6,
                            Name = "F"
                        },
                        new
                        {
                            Id = 7,
                            Name = "G"
                        },
                        new
                        {
                            Id = 8,
                            Name = "H"
                        },
                        new
                        {
                            Id = 9,
                            Name = "I"
                        },
                        new
                        {
                            Id = 10,
                            Name = "J"
                        },
                        new
                        {
                            Id = 11,
                            Name = "K"
                        },
                        new
                        {
                            Id = 12,
                            Name = "L"
                        },
                        new
                        {
                            Id = 13,
                            Name = "M"
                        },
                        new
                        {
                            Id = 14,
                            Name = "N"
                        },
                        new
                        {
                            Id = 15,
                            Name = "O"
                        },
                        new
                        {
                            Id = 16,
                            Name = "P"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Q"
                        },
                        new
                        {
                            Id = 18,
                            Name = "R"
                        },
                        new
                        {
                            Id = 19,
                            Name = "S"
                        },
                        new
                        {
                            Id = 20,
                            Name = "T"
                        },
                        new
                        {
                            Id = 21,
                            Name = "U"
                        },
                        new
                        {
                            Id = 22,
                            Name = "V"
                        },
                        new
                        {
                            Id = 23,
                            Name = "W"
                        },
                        new
                        {
                            Id = 24,
                            Name = "X"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Y"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Z"
                        });
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Batch")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<short>("CurrentSemester")
                        .HasColumnType("smallint");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<double>("Gpa")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RollNo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("SectionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentsId");

                    b.HasIndex("SectionsId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.TeacherCourseSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Batch")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SectionId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCourseSections");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Teachers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ClassroomsStudents", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Classrooms", null)
                        .WithMany()
                        .HasForeignKey("ClassroomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni_Sphere.Models.Domain.Students", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoursesDepartments", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Courses", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni_Sphere.Models.Domain.Departments", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoursesStudents", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Courses", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni_Sphere.Models.Domain.Students", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DepartmentsSections", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Departments", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni_Sphere.Models.Domain.Sections", null)
                        .WithMany()
                        .HasForeignKey("SectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Classrooms", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Courses", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni_Sphere.Models.Domain.Teachers", "Teacher")
                        .WithMany("Classrooms")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.DiscussionPost", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Classrooms", "ClassRoom")
                        .WithMany("DiscussionPosts")
                        .HasForeignKey("ClassroomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Students", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Departments", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni_Sphere.Models.Domain.Sections", "Section")
                        .WithMany()
                        .HasForeignKey("SectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.TeacherCourseSection", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Courses", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni_Sphere.Models.Domain.Sections", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uni_Sphere.Models.Domain.Teachers", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Section");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Teachers", b =>
                {
                    b.HasOne("Uni_Sphere.Models.Domain.Departments", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Classrooms", b =>
                {
                    b.Navigation("DiscussionPosts");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Departments", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Uni_Sphere.Models.Domain.Teachers", b =>
                {
                    b.Navigation("Classrooms");
                });
#pragma warning restore 612, 618
        }
    }
}
